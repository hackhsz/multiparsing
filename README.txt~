QUESTION 1
	 PART B:By Definiation, dependecy graph is projective if it could be drawn without any crossing arrows. A dependency graph is non-projective if it has any corssing links. Non-projective dependency is assoicated with topicalization and extraposition explained in provideddata file. Therefore, for any i positions between position a and b there can not have a parent/child of i outside a and b. 

	 PART C: projective: He goes to a party
	      	 non-projective: I got a girlfriend who is really kind but ugly

QUESTION 2

	 PART B: badfeatires.model

	 UAS:0.229038040231
	 LAS:0.125473013344

QUESTION 3

	 PART A:
	      For this question, I have only added corresponding features listed in the table,making sufficient improvements along the way

	      Lemma:
	      1,After implementing the first index of of the stack, function see if this token is an empty string. Then, append this tag with stack/buffer lemma
              2,O(n)
	      3,After adding LEMMA, UAS improved 0.0139 in average, LAS improved 0.0024 in average

	      Form:
	      1, I followed the idea in the provided code, and by the same logic,add form tag for buffer[0] and buffer[1]
	      2,O(n)
	      3, After adding FORM, UAS improved 0.015  in average, LAS improved 0.02  in average 

	      FEATS:
	      1, the same logic and implemention except for the name of the tag for above functions
	      2, O(n)
	      3, After adding FEATS, UAS improved 0.0003  in average, LAS improved 0.003   in average


	      POSTAG:
	      1, same 
	      2,O(n)
	      3, After adding POSTAG, UAS improved 0.15  in average, LAS improved 0.18  in average


	      
	       	 


	 PART D:
	      
Tradeoffs for arc-eager parsing is that arc-eager parser uses a bottom up parsing method generating subtrees and combining them recursively to generate the tree. However, the assumption is that the sentences are projective as it would then take O(n) time. However, if the sentence is not projective, it would lead to inaccurate tags since the model was trained on projective sentences.

